@page "/categorias"
@rendermode InteractiveServer
@inject Usuario usuarioActual
@inject NavigationManager Navigation
@inject DarAltaCategoria categoriasAltas
@inject DarBajaCategoria categoriasBajas
@inject ModificarCategoria categoriasModificar
@inject MostrarCategorias listadoCategorias

<PageTitle>Gestión de Categorías</PageTitle>

<div class="contenedor">
    <section class="formulario-seccion">
        <button class="boton-inicio" @onclick="() => MostrarFormularioAlta()">Dar alta categoría</button>
        <button class="boton-inicio" @onclick="() => MostrarFormularioBaja()">Dar baja categoría</button>
        <button class="boton-inicio" @onclick="() => MostrarFormularioModificar()">Modificar categoría</button>
    </section>

    <section class="tabla-categorias">
        <h2>Lista de Categorías</h2>
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Fecha de Creación</th>
                    <th>Fecha de Última Modificación</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var categoria in listadoCategorias.Ejecutar())
                {
                    <tr>
                        <td>@categoria.Id</td>
                        <td>@categoria.Nombre</td>
                        <td>@categoria.Descripcion</td>
                        <td>@categoria.FechaCreacion</td>
                        <td>@categoria.FechaUltimaModificacion</td>
                    </tr>
                }
            </tbody>
        </table>
    </section>

    @if (mostrarFormularioAlta)
    {
        <section class="formulario-seccion">
            <h3>Formulario para dar alta categoría</h3>
            <form @onsubmit="ejecutarAlta">
                <div class="elemento-input">
                    <p>Nombre de categoría nueva</p>
                    <input type="text" @bind="nombreCategoria" required />
                </div>
                <div class="elemento-input">
                    <p>Descripción</p>
                    <input type="text" @bind="descripcion" placeholder="Descripción" required />
                </div>
                <button type="submit" class="boton-inicio">Dar Alta categoría</button>
            </form>
            <button class="boton-vuelta" @onclick="volverAOpcionesCategorias">Volver</button>
        </section>
    }

    @if (mostrarFormularioBaja)
    {
        <section class="formulario-seccion">
            <h3>Formulario para dar baja categoría</h3>
            <form @onsubmit="ejecutarBaja">
                <div class="elemento-input">
                    <p>ID de la categoría a dar de baja</p>
                    <input type="number" @bind="idABuscar" required />
                </div>
                <button type="submit" class="boton-inicio">Guardar</button>
            </form>
            <button class="boton-vuelta" @onclick="volverAOpcionesCategorias">Volver</button>
        </section>
    }

    @if (mostrarFormularioModificar)
    {
        <section class="formulario-seccion">
            <h3>Formulario para modificar categoría</h3>
            <form @onsubmit="ejecutarModificacion">
                <div class="elemento-input">
                    <p>ID de categoría a modificar</p>
                    <input type="text" @bind="idAModificar" required />
                </div>
                <div class="elemento-input">
                    <p>Nombre nuevo</p>
                    <input type="text" @bind="nombreCambiado" required />
                </div>
                <div class="elemento-input">
                    <p>Descripción nueva</p>
                    <input type="text" @bind="descripcionModificada" placeholder="Descripción nueva" required />
                </div>
                <button type="submit" class="boton-inicio">Guardar</button>
            </form>
            <button class="boton-vuelta" @onclick="volverAOpcionesCategorias">Volver</button>
        </section>
    }

    @if (!string.IsNullOrEmpty(mensajeDeError))
    {
        <div class="error-message">
            @mensajeDeError
        </div>
    }
</div>

@code {
    private string? mensajeDeError { get; set; }
    private bool mostrarFormularioAlta = false;
    private bool mostrarFormularioBaja = false;
    private bool mostrarFormularioModificar = false;
    private string? nombreCategoria, nombreCambiado, descripcion, descripcionModificada;
    private int idABuscar, idAModificar;
    private int idUsuario; 

    private void MostrarFormularioModificar()
    {
        mostrarFormularioModificar = true;
        mostrarFormularioAlta = false;
        mostrarFormularioBaja = false;
    }

    private void MostrarFormularioBaja()
    {
        mostrarFormularioBaja = true;
        mostrarFormularioAlta = false;
        mostrarFormularioModificar = false;
    }

    private void MostrarFormularioAlta()
    {
        mostrarFormularioAlta = true;
        mostrarFormularioBaja = false;
        mostrarFormularioModificar = false;
    }

    private void volverAOpcionesCategorias()
    {
        mostrarFormularioAlta = false;
        mostrarFormularioBaja = false;
        mostrarFormularioModificar = false;
    }

    private void ejecutarModificacion()
    {
        try
        {
            categoriasModificar.validarModificacion(usuarioActual.IdUsuario,idAModificar, nombreCambiado, descripcionModificada);
            mostrarFormularioModificar = false;
            listadoCategorias.Ejecutar();  // Actualizar lista de categorías
        }
        catch (Exception ex)
        {
            mensajeDeError = ex.Message;
        }
    }

    private void ejecutarBaja()
    {
        try
        {
            categoriasBajas.validarBaja(usuarioActual.IdUsuario,idABuscar);
            mostrarFormularioBaja = false;
            listadoCategorias.Ejecutar();  // Actualizar lista de categorías
        }
        catch (Exception ex)
        {
            mensajeDeError = ex.Message;
        }
    }

    private void ejecutarAlta()
    {
        try
        {
            categoriasAltas.validarAlta(usuarioActual.IdUsuario,nombreCategoria!, descripcion!);
            mostrarFormularioAlta = false;
            listadoCategorias.Ejecutar();  // Actualizar lista de categorías
        }
        catch (Exception ex)
        {
            mensajeDeError = ex.Message;
        }
    }
}
