@page "/productos"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject DarAltaProducto productoAlta
@inject DarBajaProducto productoBaja
@inject ModificarProducto productoModificar
@inject ListarProductos productoListar
@inject ProductoValidador validador
@inject Usuario usuarioActual

<PageTitle>Gestión de Productos</PageTitle>

<div class="contenedor">
    <section class="formulario-seccion">
        <h1 class="titulo">Gestión de Producto</h1>

        <div class="elemento-input">
            <label for="accion">Seleccionar acción:</label>
            <select id="accion" @bind="_accionSeleccionada">
                <option value="0">Selecciona una acción</option>
                <option value="1">Dar Alta Producto</option>
                <option value="2">Dar Baja Producto</option>
                <option value="3">Modificar Producto</option>
            </select>
        </div>

        @if (_accionSeleccionada == 1)
        {
            <form class="form" @onsubmit="DarAlta">
                <div class="elemento-input">
                    <input type="text" @bind="_nombre" id="input-nombre" placeholder="Nombre" required>
                </div>
                <div class="elemento-input">
                    <input type="text" @bind="_descripcion" id="input-descripcion" placeholder="Descripción" required>
                </div>
                <div class="elemento-input">
                    <input type="number" @bind="_precioUnitario" id="input-precioUnitario" placeholder="Precio Unitario" required>
                </div>
                <div class="elemento-input">
                    <input type="number" @bind="_stockDisponible" id="input-stockDisponible" placeholder="Stock Disponible" required>
                </div>
                <div class="elemento-input">
                    <input type="number" @bind="_idCategoria" id="input-idCategoria" placeholder="Id Categoría" required>
                </div>
                <button type="submit" class="boton-inicio">Dar Alta Producto</button>
            </form>
        }

        @if (_accionSeleccionada == 2)
        {
            <form class="form" @onsubmit="DarBaja">
                <div class="elemento-input">
                    <input type="number" @bind="_idProducto" id="input-idProducto" placeholder="ID del Producto" required>
                </div>
                <button type="submit" class="boton-inicio">Dar Baja Producto</button>
            </form>
        }

        @if (_accionSeleccionada == 3)
        {
            <form class="form" @onsubmit="Modificar">
                <div class="elemento-input">
                    <input type="number" @bind="_idProducto" id="input-idProducto" placeholder="ID del Producto" required>
                </div>
                <div class="elemento-input">
                    <input type="text" @bind="_nuevoNombre" id="input-nuevoNombre" placeholder="Nuevo Nombre" required>
                </div>
                <div class="elemento-input">
                    <input type="text" @bind="_nuevaDesc" id="input-nuevaDesc" placeholder="Nueva Descripción" required>
                </div>
                <div class="elemento-input">
                    <input type="number" @bind="_nuevoPrecio" id="input-nuevoPrecio" placeholder="Nuevo Precio" required>
                </div>
                <div class="elemento-input">
                    <input type="number" @bind="_nuevoStock" id="input-nuevoStock" placeholder="Nuevo Stock" required>
                </div>
                <div class="elemento-input">
                    <input type="number" @bind="_nuevaCategoria" id="input-nuevaCategoria" placeholder="Nueva Categoría" required>
                </div>
                <button type="submit" class="boton-inicio">Modificar Producto</button>
            </form>
        }
    </section>

    <!-- Notificación -->
    @if (!string.IsNullOrEmpty(MensajeNotificacion))
    {
        <div class="notificacion @TipoNotificacion">
            @MensajeNotificacion
        </div>
    }

    @if (!string.IsNullOrEmpty(ErrorMensaje))
    {
        <div class="error-message">
            @ErrorMensaje
        </div>
    }

    <section class="lista-productos">
        <h2>Productos Disponibles</h2>
        <table class="tabla-productos">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Precio Unitario</th>
                    <th>Stock Disponible</th>
                    <th>Categoría</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var prod in productoListar.Ejecutar()) 
                {
                    <tr>
                        <td>@prod.Id</td>
                        <td>@prod.Nombre</td>
                        <td>@prod.Descripcion</td>
                        <td>@prod.PrecioUnitario</td>
                        <td>@prod.StockDisponible</td>
                        <td>@prod.CategoriaId</td>
                    </tr>
                }
            </tbody>
        </table>
    </section>
</div>

@code {
    private string _nombre;
    private string _descripcion;
    private double _precioUnitario;
    private int _stockDisponible;
    private int _idProducto;
    private string ErrorMensaje { get; set; }
    private string _nuevoNombre,_nuevaDesc; 
    private double _nuevoPrecio; 
    private int _nuevoStock,_idCategoria,_nuevaCategoria; 
    private List<Producto> _lista = new List<Producto>(); 
    private string MensajeNotificacion { get; set; }
    private string TipoNotificacion { get; set; }

    private int _accionSeleccionada = 0;  

    private void DarAlta()
    {
        if (_accionSeleccionada == 1)
        {
            try
            {
                validador.ValidarNombre(_nombre);
                validador.ValidarPrecioUnitario(_precioUnitario);
                validador.ValidarStockDisponible(_stockDisponible);
                productoAlta.Ejecutar(usuarioActual.IdUsuario, _nombre, _descripcion, _precioUnitario, _stockDisponible, _idCategoria);
                MensajeNotificacion = "Producto dado de alta correctamente";
                TipoNotificacion = "exito";
                Navigation.NavigateTo("/productos"); // Redirigir a la misma página para refrescar
            }
            catch (Exception ex)
            {
                MensajeNotificacion = "Error en el dado de alta de producto: " + ex.Message;
                TipoNotificacion = "error";
            }
        }
    }

    private void DarBaja()
    {
        if (_accionSeleccionada == 2)
        {
            try
            {
                productoBaja.Ejecutar(usuarioActual.IdUsuario, _idProducto);
                MensajeNotificacion = "Producto dado de baja correctamente";
                TipoNotificacion = "exito";
                Navigation.NavigateTo("/productos"); // Redirigir a la misma página para refrescar
            }
            catch (Exception ex)
            {
                MensajeNotificacion = "Error en el dado de baja de producto: " + ex.Message;
                TipoNotificacion = "error";
            }
        }
    }

    private void Modificar()
    {
        try
        {
            validador.ValidarNombre(_nuevoNombre);
            validador.ValidarPrecioUnitario(_nuevoPrecio);
            validador.ValidarStockDisponible(_nuevoStock);
            productoModificar.Ejecutar(_idProducto, _nuevoNombre, _nuevaDesc, _nuevoPrecio, _nuevoStock, _nuevaCategoria);
            MensajeNotificacion = "Producto modificado correctamente";
            TipoNotificacion = "exito";
            Navigation.NavigateTo("/productos"); // Redirigir a la misma página para refrescar
        }
        catch (Exception ex)
        {
            MensajeNotificacion = "Error al modificar el producto: " + ex.Message;
            TipoNotificacion = "error";
        }
    }
}
