@page "/GestionDeUsuario" 
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject CasoDeUsoUsuarioBaja usuarioBaja
@inject MostrarUsuarios verusuarios
@inject CasoDeUsoUsuarioAlta usuarioAlta
@inject CasoDeUsoUsuarioModificar usuarioModificar
@inject CasoDeUsoPermisoAlta permisoAlta
@inject CasoDeUsoPermisoBaja permisoBaja
@inject ConsultaDePermisos consultaDePermisos
@inject Usuario usuarioActual

<PageTitle>Gestión de Usuarios</PageTitle> 

<div class="contenedor">
    <h1>Gestión de Usuarios</h1>
    <button class="btn btn-primary" @onclick="AbrirFormularioAgregarUsuario">Agregar Usuario</button>
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Nombre</th>
                <th>Apellido</th>
                <th>Email</th>
                <th>Permisos</th>
                <th>Acciones</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var usuario in verusuarios.Ejecutar())
            {
                <tr>
                    <td>@usuario.IdUsuario</td>
                    <td>@usuario.Nombre</td>
                    <td>@usuario.Apellido</td>
                    <td>@usuario.Email</td>
                    <td><ul>
                        @foreach (var item in usuario.Permisos)
                        {
                            <span>@item.ToString() ,</span> 
                        }
                    </ul></td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => eliminar(usuario.Email!)">
                            Eliminar
                        </button>
                        <button class="btn btn-primary" @onclick="() => EditarUsuario(usuario)">
                            Editar
                        </button>
                        @if(consultaDePermisos.admin(usuarioActual.IdUsuario)){
                            <button class="btn btn-primary" @onclick="() => AbrirModalAgregarPermiso(usuario)">
                                Agregar Permiso
                            </button>
                            <button class="btn btn-primary" @onclick="() => AbrirModalEliminarPermiso(usuario)">
                                Eliminar Permiso
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="modal" style="display:@(mostrarEliminarPermiso ? "flex" : "none")">
    <div class="modal-content">
        <h2>Eliminar Permiso</h2>
        
        <div>
            <label for="permisos">Selecciona el Permiso:</label>
            <select id="permisos" @bind="permisoSeleccionado">
                @foreach (var permiso in permisos)
                {
                    <option value="@permiso.ToString()">@permiso.ToString()</option>
                }
            </select>
        </div>
        
        <button @onclick="() => EliminarPermiso(permisoSeleccionado)">
            Eliminar Permiso
        </button>
        <button @onclick="CerrarModalEliminarPermiso">
            Cancelar
        </button>
    </div>
</div>


<div class="modal" style="display:@(mostrarAgregarPermiso ? "flex" : "none")">
    <div class="modal-content">
        <h2>Agregar Permiso</h2>
        
        <div>
            <label for="permisos">Selecciona el Permiso:</label>
            <select id="permisos" @bind="permisoSeleccionado">
                @foreach (var permiso in permisosDisponibles)
                {
                    <option value="@permiso.ToString()">@permiso.ToString()</option>
                }
            </select>
        </div>
        
        <button @onclick="() => AgregarPermiso(permisoSeleccionado)">
            Agregar Permiso
        </button>
        <button @onclick="CerrarModalAgregarPermiso">
            Cancelar
        </button>
    </div>
</div>


<div class="modal" style="display:@(mostrarModificar ? "flex" : "none")">
    <div class="modal-content">
        <h2>Modificar Usuario</h2>
        <div>
            <label for="nombre">Nombre:</label>
            <input type="text" id="nombre" @bind="nombre" />
        </div>
        <div>
            <label for="apellido">Apellido:</label>
            <input type="text" id="apellido" @bind="apellido" />
        </div>
        <div>
            <label for="email">Email:</label>
            <input type="email" id="email" @bind="email" />
        </div>
        <div>
            <label for="password">Nueva Contraseña (opcional):</label>
            <input type="password" id="password" @bind="password" />
        </div>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
          <div style="color: red;">
          @errorMessage
         </div>
        }
        <button @onclick="() => GuardarCambios(idUsuario, nombre, apellido, email, password)">
            Guardar Cambios
        </button>
        <button @onclick="CerrarModal">Cancelar</button>

    </div>
</div>

<!-- Modal para agregar un nuevo usuario -->
<div class="modal" style="display:@(mostrarAgregarUsuario ? "flex" : "none")">
    <div class="modal-content">
        <h2>Agregar Usuario</h2>
        
        <div>
            <label for="nombreNuevoUsuario">Nombre:</label>
            <input type="text" id="nombreNuevoUsuario" @bind="nombreNuevoUsuario" />
        </div>
        <div>
            <label for="apellidoNuevoUsuario">Apellido:</label>
            <input type="text" id="apellidoNuevoUsuario" @bind="apellidoNuevoUsuario" />
        </div>
        <div>
            <label for="emailNuevoUsuario">Email:</label>
            <input type="email" id="emailNuevoUsuario" @bind="emailNuevoUsuario" />
        </div>
        <div>
            <label for="passwordNuevaUsuario">Contraseña:</label>
            <input type="password" id="passwordNuevaUsuario" @bind="passwordNuevaUsuario" required />
        </div>
        
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div style="color: red;">
                @errorMessage
            </div>
        }
        
        <button @onclick="() => DarDeAltaUsuario()">Dar de Alta Usuario</button>
        <button @onclick="CerrarFormularioAgregarUsuario">Cancelar</button>
    </div>
</div>

@code {
private bool mostrarModificar = false;
    private bool mostrarEliminarPermiso = false;
    private bool mostrarAgregarPermiso = false;
    private bool mostrarAgregarUsuario = false; // Controla la visibilidad del modal de agregar usuario
    private Permiso.Permisos permisoSeleccionado;
    private string? apellido;
    private string? nombre;
    private string? email;
    private string? password;
    private int idUsuario;
    private int idAct;
    private List<Permiso.Permisos> permisos = new List<Permiso.Permisos>();
    private string? errorMessage;
    private string? nombreNuevoUsuario;
    private string? apellidoNuevoUsuario;
    private string? emailNuevoUsuario;
    private string? passwordNuevaUsuario; // Contraseña para el nuevo usuario
    private string? mensajePopup;
    private string colorPopup = "green"; // Valor por defecto: verde para éxito
    private List<Permiso.Permisos> permisosDisponibles = new List<Permiso.Permisos>(); // Lista de permisos disponibles para agregar

    // Lista de todos los permisos posibles
    List<Permiso.Permisos> todosLosPermisos = new List<Permiso.Permisos>((Permiso.Permisos[])Enum.GetValues(typeof(Permiso.Permisos)));

    private void EditarUsuario(Usuario usuario)
    {
        // Rellenamos los datos del usuario en el modal
        idUsuario = usuario.IdUsuario;
        nombre = usuario.Nombre;
        apellido = usuario.Apellido;
        email = usuario.Email;
        password = ""; // Limpiamos la contraseña por si no se quiere modificar
        mostrarModificar = true;
    }

    private void CerrarModal()
    {
        mostrarModificar = false;
    }

    private void AbrirModalEliminarPermiso(Usuario usuario)
    {
        permisos = usuario.Permisos;
        idAct = usuario.IdUsuario;
        mostrarEliminarPermiso = true;
    }

    private void CerrarModalEliminarPermiso()
    {
        mostrarEliminarPermiso = false;
    }

    private void AbrirModalAgregarPermiso(Usuario usuario)
    {
        // Obtenemos los permisos que el usuario no posee
        permisosDisponibles = todosLosPermisos.Except(usuario.Permisos).ToList();
        permisos = usuario.Permisos;
        idAct = usuario.IdUsuario;
        mostrarAgregarPermiso = true;
    }

    private void CerrarModalAgregarPermiso()
    {
        mostrarAgregarPermiso = false;
    }

    private void AgregarPermiso(Permiso.Permisos permiso)
    {   
        permisos.Add(permiso);
        permisoAlta.Ejecutar(permisos,idAct);
        CerrarModalAgregarPermiso();
    }

    public void GuardarCambios(int? idUsuario, string nombre, string apellido, string email, string password)
    {
        try
        {
            usuarioModificar.Ejecutar(idUsuario, nombre, apellido, email, password);
            CerrarModal();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private void eliminar(string email)
    {
        usuarioBaja.Ejecutar(email);
    }

    private void EliminarPermiso(Permiso.Permisos permiso)
{
    permisos.Remove(permiso);
    permisoBaja.Ejecutar(permisos,idAct);
    CerrarModalEliminarPermiso();
}

  private void DarDeAltaUsuario()
    {
        try
        {
            // Validación simple de contraseña
            if (string.IsNullOrEmpty(passwordNuevaUsuario))
            {
                errorMessage = "La contraseña es obligatoria.";
                return;
            }

            usuarioAlta.Ejecutar(nombreNuevoUsuario, apellidoNuevoUsuario, emailNuevoUsuario, passwordNuevaUsuario);
            mostrarAgregarUsuario = false; // Cierra el formulario después de guardar el usuario
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    
    private void AbrirFormularioAgregarUsuario()
    {
        mostrarAgregarUsuario = true; // Muestra el formulario de agregar usuario cuando se hace clic en el botón "+"
    }

    private void CerrarFormularioAgregarUsuario()
    {
        mostrarAgregarUsuario = false; 
    }

}


